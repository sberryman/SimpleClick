{
	"name": "SimpleClick DevContainer",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "Dockerfile",

	// Set *default* container specific settings.json values on container create.
	"settings": {},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-python.python",
		"github.copilot",
		"bpruitt-goddard.mermaid-markdown-syntax-highlighting",
		"vstirbu.vscode-mermaid-preview",
		"ms-python.pylint",
		"ms-vscode.makefile-tools",
		"ms-python.vscode-pylance",
		"ms-azuretools.vscode-docker"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [
	// 	"5055:5000"
	// ],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	"runArgs": [ "--shm-size=16G", "--gpus", "all" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
	"mounts": [
		"type=bind,source=/media/sberryman/tv_media3/datasets/checkpoints,target=/root/.cache/torch/hub/checkpoints",
		"type=bind,source=/media/sberryman/nvme_1tb/service-multivehicledetection,target=/data",
		"source=/tmp/.X11-unix,target=/tmp/.X11-unix,type=bind,consistency=cached"
	],

	"containerEnv": {
		"NVIDIA_VISIBLE_DEVICES": "1",
		"DISPLAY": "hostname -I | awk '{print $1}':0"
	}

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
